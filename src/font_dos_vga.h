////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// FontAsCode exporter v1.0 - Font data exported as an array of bytes                 //
//                                                                                    //
// more info and bugs-report:  github.com/raysan5/raylib                              //
// feedback and support:       ray[at]raylib.com                                      //
//                                                                                    //
// Copyright (c) 2018-2022 Ramon Santamaria (@raysan5)                                //
//                                                                                    //
// ---------------------------------------------------------------------------------- //
//                                                                                    //
// TODO: Fill the information and license of the exported font here:                  //
//                                                                                    //
// Font name: Perfect DOS VGA 437                                                     //
// Font creator: Zeh Fernando                                                         //
// Font LICENSE: https://www.dafont.com/es/perfect-dos-vga-437.font (Free)            //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

#define COMPRESSED_DATA_SIZE_FONT_DOSVGA 1328

// Font image pixels data compressed (DEFLATE)
// NOTE: Original pixel data simplified to GRAYSCALE
static unsigned char fontData_DosVga[COMPRESSED_DATA_SIZE_FONT_DOSVGA] = { 0xed,
    0xdd, 0xdb, 0x72, 0xac, 0x36, 0x10, 0x05, 0x50, 0xfd, 0xff, 0x4f, 0x2b, 0x95, 0x87, 0xa4, 0xea, 0x54, 0x62, 0x10, 0xbb,
    0x5b, 0x0c, 0x8c, 0x97, 0xd7, 0x9b, 0xc7, 0xc6, 0x98, 0xcd, 0x45, 0x33, 0x74, 0x8b, 0x39, 0x00, 0x00, 0x0e, 0xfc, 0xfd,
    0xf5, 0xf3, 0x77, 0x8f, 0x5e, 0xfd, 0xff, 0xd7, 0x8e, 0x96, 0xfa, 0xe7, 0xf7, 0x7f, 0xfe, 0x89, 0x59, 0x58, 0xea, 0xd9,
    0xcf, 0x9e, 0xfd, 0x6f, 0xd7, 0x5f, 0xf9, 0xf3, 0x6b, 0x7d, 0x59, 0xe9, 0x56, 0x38, 0x5f, 0xe6, 0xb5, 0xf4, 0x8f, 0xd6,
    0x7a, 0x5f, 0xfe, 0xc9, 0x92, 0x8f, 0xf7, 0xd5, 0x6b, 0x29, 0x66, 0xdb, 0xf7, 0xfa, 0x96, 0x3f, 0xfe, 0x8d, 0x74, 0x2b,
    0x7c, 0x32, 0xff, 0xe3, 0xfd, 0x7d, 0x1c, 0xbe, 0xb6, 0x96, 0x59, 0xcf, 0x71, 0xbe, 0xb2, 0xf6, 0xc7, 0xaf, 0xef, 0x3c,
    0xf2, 0x56, 0xf6, 0xe7, 0xa3, 0xf5, 0xdb, 0x9b, 0xff, 0xf8, 0x37, 0xff, 0xab, 0x29, 0x9d, 0x1d, 0xe1, 0x2b, 0x99, 0x75,
    0x1c, 0xfd, 0xe3, 0xf4, 0x08, 0xaa, 0x5d, 0xbd, 0x76, 0xa5, 0xbf, 0xb2, 0x05, 0x3b, 0xd7, 0x23, 0x59, 0xd6, 0x5a, 0xfe,
    0x23, 0x58, 0xfb, 0xb9, 0x70, 0x6d, 0xa9, 0xe6, 0x5f, 0xb9, 0xfe, 0x8f, 0x1b, 0xb6, 0xfb, 0x3f, 0x5b, 0xe0, 0xfd, 0xf9,
    0x67, 0x79, 0x5d, 0x3b, 0xbf, 0xdd, 0x33, 0x4e, 0xba, 0x2f, 0xfd, 0xe7, 0xe7, 0x5f, 0xb9, 0xfe, 0x9f, 0x5f, 0xdb, 0xae,
    0xae, 0xd3, 0x1b, 0xf3, 0x5f, 0x1d, 0x1b, 0xdd, 0x73, 0x1d, 0x1a, 0xad, 0xc7, 0xff, 0xd9, 0xe8, 0x6b, 0xc8, 0x7f, 0x79,
    0xbb, 0xbd, 0xf1, 0xfc, 0xdf, 0xf1, 0x5e, 0xe9, 0xda, 0x6f, 0x3e, 0xf5, 0x28, 0xd9, 0x77, 0x7c, 0x7d, 0x3a, 0xff, 0xb5,
    0x7d, 0x3b, 0xdd, 0xb3, 0x66, 0xcb, 0x1e, 0xf0, 0xde, 0xf4, 0xcf, 0xdf, 0x05, 0xf5, 0xbe, 0x07, 0xdc, 0x75, 0x6d, 0x7b,
    0x77, 0x02, 0x54, 0x3f, 0x53, 0x90, 0xbe, 0xbb, 0x0a, 0xc8, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbb, 0xef, 0xc5, 0xe4,
    0x95, 0xba, 0xf3, 0xf4, 0x3e, 0xe4, 0xda, 0x1d, 0xcc, 0xd9, 0xba, 0xce, 0x3d, 0x15, 0xa2, 0x79, 0x35, 0x7f, 0x75, 0x6b,
    0xcf, 0x85, 0x8a, 0xab, 0xbe, 0x7b, 0xb1, 0xab, 0x95, 0xba, 0x7b, 0xaa, 0xfc, 0xb2, 0xb5, 0x5a, 0x7d, 0x75, 0x57, 0x35,
    0xff, 0xda, 0xd2, 0xb2, 0xad, 0x3d, 0x4b, 0x3d, 0x2b, 0xfd, 0x5d, 0x08, 0x23, 0xae, 0x83, 0x5f, 0x5d, 0xcb, 0xee, 0xfc,
    0xef, 0xb9, 0x47, 0x95, 0xd5, 0x6d, 0xf7, 0x74, 0xbe, 0x64, 0xeb, 0x9c, 0x1d, 0xad, 0x79, 0x95, 0xef, 0x1b, 0xf2, 0x9f,
    0x85, 0xb3, 0x6d, 0xad, 0xa7, 0x27, 0xdf, 0x3b, 0xba, 0xcf, 0x58, 0x2b, 0x47, 0xf8, 0xf9, 0xf5, 0x3f, 0xbd, 0x5e, 0x65,
    0xd7, 0xc9, 0x9e, 0xfa, 0xa7, 0xbd, 0x7b, 0xcf, 0xd8, 0x92, 0xff, 0x6c, 0x4f, 0x3f, 0xef, 0x6a, 0xac, 0x1c, 0xc3, 0xd5,
    0xee, 0x97, 0x9e, 0xeb, 0x7f, 0x65, 0x0f, 0xc8, 0x7b, 0x87, 0x56, 0xba, 0xce, 0x3a, 0x8f, 0xff, 0xb5, 0x9f, 0xaf, 0xd4,
    0x50, 0xe7, 0x63, 0x9d, 0xf1, 0xd1, 0xfc, 0x3f, 0x31, 0x96, 0x1a, 0x61, 0x5f, 0x44, 0x77, 0x65, 0xf4, 0xb7, 0xe6, 0x7f,
    0x47, 0x7f, 0xc0, 0xee, 0xbd, 0x66, 0x4f, 0xfe, 0xf9, 0x58, 0xaa, 0xd2, 0xc7, 0xb3, 0x2f, 0xff, 0xae, 0xfa, 0xb2, 0xfe,
    0xf3, 0xe9, 0xca, 0xb8, 0xf2, 0xce, 0xfc, 0x6b, 0x9d, 0xda, 0x3b, 0x3e, 0xa5, 0x59, 0x1d, 0x93, 0x66, 0xbd, 0xbb, 0xef,
    0xac, 0x7c, 0x5c, 0xeb, 0xf9, 0x56, 0x55, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x6a, 0x77, 0x70, 0xb3,
    0xea, 0xb0, 0xca, 0x1c, 0xa0, 0xd7, 0x67, 0x6e, 0x9f, 0x4b, 0x33, 0x96, 0x8f, 0x4d, 0x75, 0xbb, 0x69, 0x1d, 0x64, 0xbd,
    0x86, 0x72, 0xf5, 0xbe, 0x72, 0x7f, 0xcd, 0x71, 0xfe, 0xea, 0x6a, 0xad, 0x43, 0x56, 0x37, 0x98, 0xf5, 0x80, 0xfc, 0x5c,
    0x9b, 0x35, 0x5b, 0xfe, 0x97, 0xbb, 0x6b, 0x7e, 0xff, 0xbb, 0xdc, 0x59, 0xd8, 0x66, 0x57, 0x5f, 0x3d, 0xfe, 0xbb, 0xcf,
    0xcc, 0xff, 0xec, 0x4c, 0xf7, 0xf6, 0xfc, 0xf3, 0xb3, 0xc3, 0x38, 0xac, 0x67, 0xdc, 0x57, 0xeb, 0x96, 0xd6, 0x57, 0x8e,
    0x2d, 0xf9, 0xcf, 0x5f, 0x99, 0x7f, 0xf6, 0x0c, 0x95, 0xd5, 0x2e, 0xb9, 0xee, 0xfc, 0xf3, 0x7a, 0xb3, 0x71, 0x72, 0x84,
    0xef, 0xa8, 0xdb, 0xdf, 0x57, 0xf3, 0xff, 0x8c, 0xe3, 0xbf, 0x7a, 0xcc, 0xdc, 0x9b, 0xff, 0x58, 0x98, 0x93, 0xbc, 0xf7,
    0x7f, 0xa9, 0x75, 0x84, 0xdd, 0x95, 0xff, 0xdd, 0x1d, 0x9e, 0xe9, 0xd9, 0xb0, 0x76, 0xfe, 0xdf, 0xd5, 0x8f, 0x56, 0xcf,
    0xff, 0xf9, 0xe3, 0xbf, 0x27, 0xe5, 0x9f, 0xfc, 0x2f, 0x9f, 0xcd, 0x7f, 0x6e, 0xcc, 0xff, 0x8e, 0xf7, 0x7f, 0xd7, 0xff,
    0xee, 0x27, 0xf3, 0x9f, 0x0f, 0xcc, 0x7f, 0x6e, 0xcc, 0x7f, 0xf7, 0xe7, 0x3f, 0x63, 0xe1, 0x5d, 0x75, 0xd7, 0xe7, 0x3f,
    0x6b, 0xb3, 0x4d, 0x74, 0x8f, 0xe1, 0x3b, 0x3e, 0xff, 0x19, 0x61, 0x47, 0xc8, 0x6c, 0xed, 0x75, 0xe1, 0x9b, 0x3a, 0x46,
    0xf8, 0xae, 0x4f, 0xe8, 0x6d, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xda, 0xdd, 0xdf, 0xab, 0x15, 0xe6, 0x77, 0xcc,
    0xd1, 0x7e, 0x56, 0x6d, 0xd5, 0x73, 0x47, 0x7a, 0x86, 0x77, 0xc7, 0xc7, 0xe2, 0x7c, 0xfc, 0xd7, 0x9e, 0x12, 0x90, 0x3d,
    0x31, 0x21, 0xad, 0x07, 0xcc, 0x67, 0x95, 0x7b, 0x6a, 0xfe, 0x2b, 0xcb, 0xbd, 0x7a, 0x77, 0x35, 0xcd, 0x23, 0xbf, 0xa7,
    0xdb, 0x5f, 0xa5, 0x96, 0xe5, 0x3f, 0x0a, 0x35, 0x1a, 0xd5, 0x9a, 0x98, 0xa4, 0x4e, 0x67, 0x84, 0xf9, 0x77, 0xcf, 0x7e,
    0x9f, 0xef, 0x01, 0x33, 0xae, 0x9b, 0xbe, 0x73, 0xe6, 0xff, 0xfd, 0xf9, 0x57, 0x6a, 0x9e, 0x92, 0xa7, 0x7c, 0xec, 0x98,
    0xc1, 0xbc, 0xbb, 0x1a, 0xaf, 0x52, 0x53, 0x9f, 0x56, 0x17, 0xec, 0xcb, 0x7f, 0x16, 0x9e, 0x74, 0x52, 0x5b, 0xe3, 0xae,
    0x6d, 0xb0, 0xaf, 0xd2, 0x27, 0xa9, 0x61, 0xde, 0x53, 0x07, 0xfe, 0xbc, 0xfc, 0xd3, 0xb3, 0xe0, 0x5a, 0x35, 0xe2, 0x1b,
    0xf2, 0xdf, 0x71, 0x46, 0xba, 0x7a, 0xd4, 0xec, 0xcc, 0x3f, 0x9f, 0x1b, 0xba, 0x3a, 0x4f, 0xfd, 0xfc, 0x78, 0xfd, 0xdd,
    0x8c, 0x47, 0x3f, 0xfd, 0xe3, 0xff, 0x51, 0x78, 0x0a, 0xc7, 0x5c, 0xca, 0x37, 0x1b, 0x59, 0xad, 0xac, 0xeb, 0x6c, 0x1e,
    0xe7, 0x3f, 0xab, 0x12, 0xb4, 0x7f, 0x76, 0xfb, 0xee, 0xfc, 0xc7, 0xc2, 0xfb, 0xd8, 0xd9, 0xfc, 0x6c, 0x80, 0xec, 0xfd,
    0xdf, 0xf9, 0xfb, 0xf9, 0xef, 0xcd, 0xbf, 0x32, 0x97, 0x7e, 0xfe, 0xb4, 0xc2, 0xd5, 0x71, 0xcc, 0xd5, 0x9a, 0xf9, 0x6a,
    0x47, 0x42, 0x32, 0xda, 0x7c, 0xce, 0xa7, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa3, 0xf8, 0x94, 0xf6, 0x79,
    0xb9, 0x8e, 0x65, 0x16, 0x66, 0x0e, 0x4d, 0x96, 0x78, 0x36, 0x83, 0xda, 0x59, 0x15, 0x4a, 0x36, 0x37, 0x7f, 0x65, 0xeb,
    0x8c, 0x4d, 0xf7, 0xdd, 0xd3, 0x8a, 0xd9, 0xab, 0x75, 0x3a, 0xab, 0x75, 0x6c, 0x7d, 0xb5, 0xf1, 0xe9, 0xef, 0xa4, 0xb5,
    0xc6, 0x1d, 0xf3, 0x7a, 0xe7, 0x7b, 0x47, 0x77, 0xb5, 0x52, 0x75, 0xfb, 0xf4, 0xe6, 0x7f, 0x57, 0x3f, 0x45, 0x65, 0x7e,
    0xd5, 0xdd, 0xf9, 0x8f, 0xb8, 0xce, 0xf7, 0xea, 0xb6, 0x4d, 0xe7, 0x59, 0x5f, 0xa9, 0xd0, 0x4b, 0xeb, 0x98, 0xb3, 0x73,
    0xf9, 0x88, 0x66, 0x8c, 0x7d, 0x6e, 0xfe, 0x95, 0xeb, 0xf5, 0xb5, 0x0e, 0xa0, 0xf4, 0x9c, 0x9a, 0xed, 0xc1, 0xab, 0x55,
    0xae, 0x7d, 0xdd, 0x38, 0xdf, 0x95, 0x7f, 0xa5, 0xce, 0x3d, 0x3b, 0x6a, 0x92, 0x8e, 0x9a, 0xb1, 0x79, 0xe6, 0xe8, 0x6b,
    0x7d, 0x9a, 0xdf, 0x92, 0x7f, 0xef, 0xf5, 0x7f, 0xb5, 0xdf, 0xa8, 0xf2, 0xcc, 0x94, 0xa7, 0xe7, 0x3f, 0xb6, 0x54, 0xdb,
    0xd7, 0x9f, 0xeb, 0x95, 0xd6, 0x80, 0x76, 0xe6, 0x3f, 0x8a, 0x23, 0x8d, 0x7b, 0xf3, 0x7f, 0x52, 0x05, 0x7f, 0xed, 0x1c,
    0xbe, 0xfb, 0x2f, 0xef, 0xce, 0xff, 0x33, 0xe7, 0xff, 0xb1, 0xa5, 0x37, 0xee, 0x9d, 0xf9, 0xaf, 0x2e, 0x7b, 0xc6, 0x7d,
    0xcc, 0xb5, 0xa7, 0x3f, 0xa5, 0xcf, 0x62, 0x1c, 0xed, 0x4f, 0x77, 0xdc, 0x59, 0xa7, 0xff, 0x99, 0xce, 0x82, 0xef, 0xec,
    0x10, 0xf0, 0xb4, 0x03, 0x9f, 0x52, 0xcb, 0xdf, 0x7d, 0x0a, 0xe9, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xbe, 0xfa, 0xaf,
    0xbd, 0xaf, 0x66, 0x9d, 0x07, 0x79, 0x6f, 0xc0, 0xef, 0xbc, 0xaf, 0xb0, 0x2f, 0xff, 0xca, 0x1c, 0x7f, 0xe7, 0x77, 0xfa,
    0xf2, 0x99, 0x21, 0xaf, 0xf5, 0x5a, 0xc8, 0xff, 0x2c, 0xa5, 0x19, 0xcf, 0x00, 0x5a, 0xa9, 0x63, 0xed, 0xca, 0xdf, 0xf9,
    0xff, 0xa9, 0xf9, 0xf7, 0x3e, 0x1f, 0x43, 0xfe, 0xef, 0xca, 0x3f, 0x9d, 0xab, 0x3f, 0x7f, 0xc6, 0x83, 0xfc, 0xb3, 0x3e,
    0x9d, 0x6c, 0x16, 0xef, 0xda, 0xc8, 0xc2, 0xf1, 0xdf, 0x5f, 0x2b, 0x98, 0x3e, 0x89, 0xa3, 0x3a, 0x8b, 0x73, 0x36, 0xfe,
    0x97, 0xff, 0xb7, 0x9d, 0x81, 0x7a, 0x7e, 0x4b, 0xfe, 0xbf, 0x21, 0x7d, 0xf9, 0x7f, 0x4b, 0x25, 0xe7, 0x6c, 0xae, 0x71,
    0x4f, 0x66, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xfe, 0xf0, 0x17 };

// Font characters rectangles data
static const Rectangle fontRecs_DosVga[95] = {
    { 4, 4, 9 , 16 },
    { 21, 4, 4 , 10 },
    { 33, 4, 6 , 4 },
    { 47, 4, 7 , 9 },
    { 62, 4, 7 , 14 },
    { 77, 4, 7 , 8 },
    { 92, 4, 7 , 10 },
    { 107, 4, 3 , 4 },
    { 118, 4, 4 , 10 },
    { 130, 4, 4 , 10 },
    { 142, 4, 8 , 5 },
    { 158, 4, 6 , 5 },
    { 172, 4, 3 , 4 },
    { 183, 4, 7 , 1 },
    { 198, 4, 2 , 2 },
    { 208, 4, 7 , 8 },
    { 223, 4, 7 , 10 },
    { 238, 4, 6 , 10 },
    { 4, 28, 7 , 10 },
    { 19, 28, 7 , 10 },
    { 34, 28, 7 , 10 },
    { 49, 28, 7 , 10 },
    { 64, 28, 7 , 10 },
    { 79, 28, 7 , 10 },
    { 94, 28, 7 , 10 },
    { 109, 28, 7 , 10 },
    { 124, 28, 2 , 7 },
    { 134, 28, 3 , 8 },
    { 145, 28, 6 , 9 },
    { 159, 28, 6 , 4 },
    { 173, 28, 6 , 9 },
    { 187, 28, 7 , 10 },
    { 202, 28, 7 , 9 },
    { 217, 28, 7 , 10 },
    { 232, 28, 7 , 10 },
    { 4, 52, 7 , 10 },
    { 19, 52, 7 , 10 },
    { 34, 52, 7 , 10 },
    { 49, 52, 7 , 10 },
    { 64, 52, 7 , 10 },
    { 79, 52, 7 , 10 },
    { 94, 52, 4 , 10 },
    { 106, 52, 7 , 10 },
    { 121, 52, 7 , 10 },
    { 136, 52, 7 , 10 },
    { 151, 52, 7 , 10 },
    { 166, 52, 7 , 10 },
    { 181, 52, 7 , 10 },
    { 196, 52, 7 , 10 },
    { 211, 52, 7 , 12 },
    { 226, 52, 7 , 10 },
    { 4, 76, 7 , 10 },
    { 19, 76, 6 , 10 },
    { 33, 76, 7 , 10 },
    { 48, 76, 7 , 10 },
    { 63, 76, 7 , 10 },
    { 78, 76, 7 , 10 },
    { 93, 76, 6 , 10 },
    { 107, 76, 7 , 10 },
    { 122, 76, 4 , 10 },
    { 134, 76, 7 , 9 },
    { 149, 76, 4 , 10 },
    { 161, 76, 7 , 4 },
    { 176, 76, 8 , 1 },
    { 192, 76, 4 , 3 },
    { 204, 76, 7 , 7 },
    { 219, 76, 7 , 10 },
    { 234, 76, 7 , 7 },
    { 4, 100, 7 , 10 },
    { 19, 100, 7 , 7 },
    { 34, 100, 6 , 10 },
    { 48, 100, 7 , 10 },
    { 63, 100, 7 , 10 },
    { 78, 100, 4 , 10 },
    { 90, 100, 6 , 13 },
    { 104, 100, 7 , 10 },
    { 119, 100, 4 , 10 },
    { 131, 100, 7 , 7 },
    { 146, 100, 7 , 7 },
    { 161, 100, 7 , 7 },
    { 176, 100, 7 , 10 },
    { 191, 100, 7 , 10 },
    { 206, 100, 7 , 7 },
    { 221, 100, 7 , 7 },
    { 236, 100, 7 , 10 },
    { 4, 124, 7 , 7 },
    { 19, 124, 7 , 7 },
    { 34, 124, 7 , 7 },
    { 49, 124, 7 , 7 },
    { 64, 124, 7 , 10 },
    { 79, 124, 7 , 7 },
    { 94, 124, 6 , 10 },
    { 108, 124, 2 , 10 },
    { 118, 124, 6 , 10 },
    { 132, 124, 7 , 2 },
};

// Font glyphs info data
// NOTE: No glyphs.image data provided
static const GlyphInfo fontGlyphs_DosVga[95] = {
    { 32, 0, 12, 9, { 0 }},
    { 33, 2, 2, 9, { 0 }},
    { 34, 1, 1, 9, { 0 }},
    { 35, 0, 3, 9, { 0 }},
    { 36, 0, 0, 9, { 0 }},
    { 37, 0, 4, 9, { 0 }},
    { 38, 0, 2, 9, { 0 }},
    { 39, 1, 1, 9, { 0 }},
    { 40, 2, 2, 9, { 0 }},
    { 41, 2, 2, 9, { 0 }},
    { 42, 0, 5, 9, { 0 }},
    { 43, 1, 5, 9, { 0 }},
    { 44, 2, 9, 9, { 0 }},
    { 45, 0, 7, 9, { 0 }},
    { 46, 3, 10, 9, { 0 }},
    { 47, 0, 4, 9, { 0 }},
    { 48, 0, 2, 9, { 0 }},
    { 49, 1, 2, 9, { 0 }},
    { 50, 0, 2, 9, { 0 }},
    { 51, 0, 2, 9, { 0 }},
    { 52, 0, 2, 9, { 0 }},
    { 53, 0, 2, 9, { 0 }},
    { 54, 0, 2, 9, { 0 }},
    { 55, 0, 2, 9, { 0 }},
    { 56, 0, 2, 9, { 0 }},
    { 57, 0, 2, 9, { 0 }},
    { 58, 3, 4, 9, { 0 }},
    { 59, 2, 4, 9, { 0 }},
    { 60, 1, 3, 9, { 0 }},
    { 61, 1, 5, 9, { 0 }},
    { 62, 1, 3, 9, { 0 }},
    { 63, 0, 2, 9, { 0 }},
    { 64, 0, 3, 9, { 0 }},
    { 65, 0, 2, 9, { 0 }},
    { 66, 0, 2, 9, { 0 }},
    { 67, 0, 2, 9, { 0 }},
    { 68, 0, 2, 9, { 0 }},
    { 69, 0, 2, 9, { 0 }},
    { 70, 0, 2, 9, { 0 }},
    { 71, 0, 2, 9, { 0 }},
    { 72, 0, 2, 9, { 0 }},
    { 73, 2, 2, 9, { 0 }},
    { 74, 0, 2, 9, { 0 }},
    { 75, 0, 2, 9, { 0 }},
    { 76, 0, 2, 9, { 0 }},
    { 77, 0, 2, 9, { 0 }},
    { 78, 0, 2, 9, { 0 }},
    { 79, 0, 2, 9, { 0 }},
    { 80, 0, 2, 9, { 0 }},
    { 81, 0, 2, 9, { 0 }},
    { 82, 0, 2, 9, { 0 }},
    { 83, 0, 2, 9, { 0 }},
    { 84, 1, 2, 9, { 0 }},
    { 85, 0, 2, 9, { 0 }},
    { 86, 0, 2, 9, { 0 }},
    { 87, 0, 2, 9, { 0 }},
    { 88, 0, 2, 9, { 0 }},
    { 89, 1, 2, 9, { 0 }},
    { 90, 0, 2, 9, { 0 }},
    { 91, 2, 2, 9, { 0 }},
    { 92, 0, 3, 9, { 0 }},
    { 93, 2, 2, 9, { 0 }},
    { 94, 0, 0, 9, { 0 }},
    { 95, 0, 13, 9, { 0 }},
    { 96, 2, 1, 9, { 0 }},
    { 97, 0, 5, 9, { 0 }},
    { 98, 0, 2, 9, { 0 }},
    { 99, 0, 5, 9, { 0 }},
    { 100, 0, 2, 9, { 0 }},
    { 101, 0, 5, 9, { 0 }},
    { 102, 1, 2, 9, { 0 }},
    { 103, 0, 5, 9, { 0 }},
    { 104, 0, 2, 9, { 0 }},
    { 105, 2, 2, 9, { 0 }},
    { 106, 1, 2, 9, { 0 }},
    { 107, 0, 2, 9, { 0 }},
    { 108, 2, 2, 9, { 0 }},
    { 109, 0, 5, 9, { 0 }},
    { 110, 0, 5, 9, { 0 }},
    { 111, 0, 5, 9, { 0 }},
    { 112, 0, 5, 9, { 0 }},
    { 113, 0, 5, 9, { 0 }},
    { 114, 0, 5, 9, { 0 }},
    { 115, 0, 5, 9, { 0 }},
    { 116, 0, 2, 9, { 0 }},
    { 117, 0, 5, 9, { 0 }},
    { 118, 0, 5, 9, { 0 }},
    { 119, 0, 5, 9, { 0 }},
    { 120, 0, 5, 9, { 0 }},
    { 121, 0, 5, 9, { 0 }},
    { 122, 0, 5, 9, { 0 }},
    { 123, 1, 2, 9, { 0 }},
    { 124, 3, 2, 9, { 0 }},
    { 125, 1, 2, 9, { 0 }},
    { 126, 0, 1, 9, { 0 }},
};

// Font loading function: DosVga
static Font LoadFont_DosVga(void)
{
    Font font = { 0 };

    font.baseSize = 16;
    font.glyphCount = 95;
    font.glyphPadding = 4;

    // Custom font loading
    // NOTE: Compressed font image data (DEFLATE), it requires DecompressData() function
    int fontDataSize_DosVga = 0;
    unsigned char *data = DecompressData(fontData_DosVga, COMPRESSED_DATA_SIZE_FONT_DOSVGA, &fontDataSize_DosVga);
    Image imFont = { data, 256, 256, 1, 2 };

    // Load texture from image
    font.texture = LoadTextureFromImage(imFont);
    UnloadImage(imFont);  // Uncompressed data can be unloaded from memory

    // Assign glyph recs and info data directly
    // WARNING: This font data must not be unloaded
    font.recs = fontRecs_DosVga;
    font.glyphs = fontGlyphs_DosVga;

    return font;
}
